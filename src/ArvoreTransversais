Para entender como cada um desses métodos de travessia (Preorder, Inorder, Postorder) funciona, podemos visualizar graficamente como os nós da árvore binária são visitados. Vamos usar uma árvore de exemplo:

Exemplo de Árvore Binária:
        1
       / \
      2   3
     / \
    4   5


Cada um desses métodos visita os nós da árvore em uma ordem diferente. Vamos visualizar a ordem de visita de cada método:

---

Preorder (Pré-Ordem)
Ordem de visita: Raiz -> Esquerda -> Direita

Visita a raiz (1)
Visita a subárvore esquerda (2, depois 4 e 5)
Visita a subárvore direita (3)

Travessia Preorder para esta árvore:
1 -> 2 -> 4 -> 5 -> 3


Graficamente:
        [1]
         |
        [2]
         |
    ---- [4]
    |
    ---- [5]
         |
        [3]


---

Inorder (Em Ordem)
Ordem de visita: Esquerda -> Raiz -> Direita

Visita a subárvore esquerda (visita 4 e 2)
Visita a raiz (1)
Visita a subárvore direita (visita 5 e 3)

Travessia Inorder para esta árvore:
4 -> 2 -> 5 -> 1 -> 3


Graficamente:
        4 -> 2 -> 5 -> 1 -> 3


---

Postorder (Pós-Ordem)
Ordem de visita: Esquerda -> Direita -> Raiz

Visita a subárvore esquerda (4 e 5)
Visita a subárvore direita (3)
Visita a raiz (1)

Travessia Postorder para esta árvore:
4 -> 5 -> 2 -> 3 -> 1


Graficamente:
        4 -> 5 -> 2 -> 3 -> 1


---

Explicação gráfica:
Preorder: Visita primeiro o nó raiz, depois percorre toda a subárvore à esquerda, e por fim, a subárvore à direita.

Inorder: Visita os nós na ordem "mais esquerda" possível primeiro, depois processa o nó atual, e por fim, a subárvore à direita.


Postorder: Visita todas as subárvores primeiro e somente no final processa o nó raiz.

Essas ordens de travessia são usadas para diferentes tipos de algoritmos e análises em árvores binárias.